# Generated by Django 5.1.1 on 2024-10-02 15:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='scrapeddata',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the data was created'),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='data',
            field=models.TextField(blank=True, help_text='The actual scraped data', null=True),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='link',
            field=models.URLField(help_text='URL from which the data was scraped'),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('SUCCESS', 'Success'), ('FAILED', 'Failed')], default='PENDING', help_text='Current status of the scraping process', max_length=20),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='title',
            field=models.CharField(help_text='Title of the scraped data', max_length=100),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the data was last updated'),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='user',
            field=models.ForeignKey(help_text='User who initiated the scraping', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='scrapeddata',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the scraped data', primary_key=True, serialize=False),
        ),
    ]
